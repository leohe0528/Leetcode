# Time: O(n)
# Space: O(n)

#知识点：dummy
#本题思路：head指向dummy，然后用head来更新新的linkedlist，最后return 整个dummy.next（整条linkedlist）



# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        dummy = ListNode(0)
        head = dummy
        carry = 0
        while l1 and l2:
            head.next = ListNode((l1.val + l2.val + carry) % 10)
            carry = (l1.val + l2.val + carry) // 10
            head = head.next
            l1 = l1.next
            l2 = l2.next

        while l1:
            head.next = ListNode((l1.val + carry) % 10)
            carry = (l1.val + carry) // 10 
            head = head.next
            l1 = l1.next
            
        while l2:
            head.next = ListNode((l2.val + carry) % 10)
            carry = (l2.val + carry) //10
            head = head.next
            l2 = l2.next
        
        if carry != 0:
            head.next = ListNode(carry)
        return dummy.next
